@inject MessagesManager manager
@inject MyState myState 

<style>
    .message {
        border: solid 1px #bbb;
        border-radius: 5px;
        box-shadow: 5px 5px 5px #888;
        padding: 10px 5px;
        margin: 10px;
        background-color: #fff;
    }

    .my {
        background-color: #eef;
        margin-left: calc(20% - 10px);
    }

</style>

@if(allMessages?.Count > 0)
{
    @foreach (var message in allMessages)
    {
        bool myMessage = (myState?.Partipant.Value?.DisplayName == message.ParticipantName);
        
        <div style="text-align: @(myMessage? "right" : "left"); ">
            <div class="@(!myMessage?"" : "my") message" style="width:80%;">
                <h5>@message.Post</h5>
                <h6><span class="font-weight-bold">@message.ParticipantName</span> - @message.PostedDateTime.ToShortTimeString()</h6>
            </div>
        </div>
    }
}

@code
{ 
    IReadOnlyCollection<Message> allMessages = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        manager.AllMessages.ListChanged += onGotAllMessages;
        this.allMessages = manager.AllMessages;
    }

    private void onGotAllMessages(IReadOnlyCollection<Message> allMessages)
    {
        this.allMessages = allMessages;
        InvokeAsync(StateHasChanged);
    }
}
